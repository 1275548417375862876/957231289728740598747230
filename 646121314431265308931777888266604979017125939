local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/ZlvXs/LinoriaLib/refs/heads/main/fronlib.lua'))()
local ThemeManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/ZlvXs/LinoriaLib/refs/heads/main/frontheme.lua'))()
local SaveManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/ZlvXs/LinoriaLib/refs/heads/main/fronmanager.lua'))()
Library:Notify("Cargando script")
local UserInputService = game:GetService("UserInputService")
local Heartbeat = game:GetService("RunService").Heartbeat
local plrs = game:GetService'Players'
local Heartbeat = game:GetService("RunService").Heartbeat
local plr = plrs.LocalPlayer
local mouse = plr:GetMouse()
local rep = game:GetService'ReplicatedStorage'
local uis = game:GetService'UserInputService'
local ts = game:GetService'TweenService'
local rs = game:GetService'RunService'

local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()

local plr22 = game.Players.LocalPlayer
local mouse = plr22:GetMouse()

local function Notify(title,text,duration)
    game:GetService'StarterGui':SetCore('SendNotification',{
        Title = tostring(title),
        Text = tostring(text),
        Duration = tonumber(duration),
    })
end

local function GetChar()
    local Char = Player.Character or Player.CharacterAdded:Wait()
    return Char
end

local function AddCd(tool,Cd)
    local cd = Instance.new('IntValue',tool)
    cd.Name = 'ClientCD'
    game.Debris:AddItem(cd,Cd)
end

local function isWithinDistance(player, target, maxDistance)
    if player and player.Character and target and target.Character then
        local playerPosition = player.Character:FindFirstChild("HumanoidRootPart").Position
        local targetPosition = target.Character:FindFirstChild("HumanoidRootPart").Position
        local distance = (playerPosition - targetPosition).Magnitude
        return distance <= maxDistance
    end
    return false
end

local function Shoot(firstPos,nextPos,Revolver)
    if Revolver:FindFirstChild'Barrel' and Revolver.Barrel:FindFirstChild'Attachment' then
        if Revolver.Barrel.Attachment:FindFirstChild'Sound' then
            local SoundClone = Revolver.Barrel.Attachment.Sound:Clone()
            SoundClone.Name = 'Uncopy'
            SoundClone.Parent = Revolver.Barrel.Attachment
            SoundClone:Play()
            game.Debris:AddItem(SoundClone, 1)
        end
        local FilterTable = {}
        table.insert(FilterTable, plr.Character)
        table.insert(FilterTable, game.Workspace['Target Filter'])
        for _, v in pairs(game.Workspace:GetDescendants()) do
            if v.ClassName == 'Accessory' then
                table.insert(FilterTable, v)
            end
        end
        local a_1, a_2, a_3 = game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(firstPos, (nextPos - firstPos).Unit * 9999999999999999999), FilterTable)
        local BulletCl = rep['Revolver Bullet']:Clone()
        game.Debris:AddItem(BulletCl, 1)
        BulletCl.Parent = game.Workspace['Target Filter']
        local mg = (firstPos - a_2).Magnitude
        BulletCl.Size = Vector3.new(0.2, 0.2, mg)
        BulletCl.CFrame = CFrame.new(firstPos, nextPos) * CFrame.new(0, 0, -mg / 2)
        ts:Create(BulletCl, TweenInfo.new(0.4, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
            Size = Vector3.new(0.06, 0.06, mg), 
            Transparency = 1
        }):Play()
        if a_1 then
            local expPart = Instance.new'Part'
            game.Debris:AddItem(expPart, 1)
            expPart.Name = 'Exploding Neon Part'
            expPart.Anchored = true
            expPart.CanCollide = true
            expPart.Shape = 'Ball'
            expPart.Material = Enum.Material.Neon
            expPart.BrickColor = BulletCl.BrickColor
            expPart.Size = Vector3.new(0.1, 0.1, 0.1)
            expPart.Parent = game.Workspace['Target Filter']
            expPart.Position = a_2
            ts:Create(expPart, TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
                Size = Vector3.new(2, 2, 2), 
                Transparency = 1
            }):Play()
            if Revolver:FindFirstChild'DamageRemote' and a_1.Parent:FindFirstChild'Humanoid' then
                Revolver.DamageRemote:FireServer(a_1.Parent.Humanoid)
            end
        end
    end
end

local SafeZone = Instance.new("Part")
SafeZone.Size = Vector3.new(100000,2, 100000)
SafeZone.Transparency = 0.800000011920929
SafeZone.Color = Color3.fromRGB(180, 76, 232)
SafeZone.Anchored = true
SafeZone.CanCollide = true
SafeZone.Position = Vector3.new(100000, 100000, 100000)
SafeZone.Parent = game.Workspace
SafeZone.Material = "ClayRoofTiles"

local Window = Library:CreateWindow({
    Title = " † Byfron Gang † | Private ",
    Center = true,
    AutoShow = true,
    TabPadding = 8
})

local Tabs = {
    Main = Window:AddTab('Misc'),
    ['UI Settings'] = Window:AddTab('Settings'),
}

local FlyGroupBox = Tabs.Main:AddLeftGroupbox('Fly')

local flySpeed = 100
local maxFlySpeed = 500

FlyGroupBox:AddLabel('Keybind'):AddKeyPicker('FlyBind', {
    Default = 'None',
    SyncToggleState = false,

    Mode = 'Toggle',

    Text = 'Fly',
    NoUI = false,

    Callback = function()
        game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.KeypadEight, false, game)
    end,

    ChangedCallback = function(New)

    end
})

FlyGroupBox:AddSlider('FlySpeed', {
    Text = 'Speed',
    Default = 100,
    Min = 1,
    Max = 500,
    Rounding = 1,
    Compact = false,

    Callback = function(Value)
        flySpeed = Value
    end
})

local LFButton = FlyGroupBox:AddButton({
    Text = 'Load Fly',
    Func = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        local rootPart = character:WaitForChild("HumanoidRootPart")
        local camera = game.Workspace.CurrentCamera
        local userInputService = game:GetService("UserInputService")
        local runService = game:GetService("RunService")
        local ValueControl = false
        local moveDirection = Vector3.new(0, 0, 0)
        local sliderHeld = false
        local flyVelocity, flyControl
        local isConfirmDelete = false
        
        local function updateFlySpeed(x)
            local relativePos = math.clamp((x - sliderAbsPos) / sliderWidth, 0, 1)
            flySpeed = math.floor(relativePos * maxFlySpeed)
        end

        local function startFly()
            humanoid.PlatformStand = true
            flyVelocity = Instance.new("BodyVelocity")
            flyVelocity.Velocity = Vector3.new(0, 0, 0)
            flyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
            flyVelocity.Parent = rootPart
            flyControl = Instance.new("BodyGyro")
            flyControl.CFrame = rootPart.CFrame
            flyControl.MaxTorque = Vector3.new(100000, 100000, 100000)
            flyControl.P = 10000
            flyControl.Parent = rootPart
        end
        
        local function stopFly()
            if flyVelocity then flyVelocity:Destroy() end
            if flyControl then flyControl:Destroy() end
            humanoid.PlatformStand = false
        end
        
        local function updateFly()
                moveDirection = Vector3.new(0, 0, 0)
                if userInputService:IsKeyDown(Enum.KeyCode.W) then
                    moveDirection = moveDirection + camera.CFrame.LookVector
                end
                if userInputService:IsKeyDown(Enum.KeyCode.S) then
                    moveDirection = moveDirection - camera.CFrame.LookVector
                end
                if userInputService:IsKeyDown(Enum.KeyCode.A) then
                    moveDirection = moveDirection - camera.CFrame.RightVector
                end
                if userInputService:IsKeyDown(Enum.KeyCode.D) then
                    moveDirection = moveDirection + camera.CFrame.RightVector
                end
                if userInputService:IsKeyDown(Enum.KeyCode.Space) then
                    moveDirection = moveDirection + Vector3.new(0, 1, 0)
                end
        
                if moveDirection.Magnitude > 0 then
                    flyVelocity.Velocity = moveDirection.Unit * flySpeed
                else
                    flyVelocity.Velocity = Vector3.new(0, 0, 0)
                end
        
                flyControl.CFrame = CFrame.new(rootPart.Position, rootPart.Position + camera.CFrame.LookVector)
        end
        
        runService.RenderStepped:Connect(function()
            if ValueControl then
                updateFly()
            end
        end)
        
        userInputService.InputBegan:Connect(function(input)
            if input.KeyCode == Enum.KeyCode.KeypadEight then
                if not isConfirmDelete then
                    ValueControl = not ValueControl
                    if ValueControl then
                        startFly()
                    else
                        stopFly()
                    end
                end
            end
        end)

        player.CharacterAdded:Connect(function(char)
            character = char
            humanoid = character:WaitForChild("Humanoid")
            rootPart = character:WaitForChild("HumanoidRootPart")
            ValueControl = false
            if ValueControl then
                startFly()
            end
        end)
    end,
    DoubleClick = false,
})

local CFrameGroupBox = Tabs.Main:AddLeftGroupbox('CFrame')

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local cframeSpeed = 100

getgenv().cframeEnabled = false

local function cframe()
    RunService.RenderStepped:Connect(function()
        if not player.Character or not player.Character:FindFirstChildOfClass("Humanoid") then
            return
        end

        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        if getgenv().cframeEnabled and humanoid and humanoid.MoveDirection.Magnitude > 0 then
            local moveDirection = humanoid.MoveDirection * cframeSpeed * RunService.RenderStepped:Wait()
            player.Character:SetPrimaryPartCFrame(player.Character.PrimaryPart.CFrame + moveDirection)
        end
    end)
end

local function onCharacterAdded(character)
    character:WaitForChild("Humanoid")
    cframe()
end

player.CharacterAdded:Connect(onCharacterAdded)

if player.Character then
    onCharacterAdded(player.Character)
end

CFrameGroupBox:AddLabel('Keybind'):AddKeyPicker('CFrameBind', {
    Default = 'None',
    SyncToggleState = false,

    Mode = 'Toggle',

    Text = 'C-Frame',
    NoUI = false,

    Callback = function(Value)
        getgenv().cframeEnabled = Value
    end,

    ChangedCallback = function(New)

    end
})

CFrameGroupBox:AddSlider('CFrameSpeed', {
    Text = 'Speed',
    Default = 30,
    Min = 1,
    Max = 500,
    Rounding = 1,
    Compact = false,

    Callback = function(Value)
        cframeSpeed = Value
    end
})

local DupeGroupBox = Tabs.Main:AddLeftGroupbox("Dupe's")

local MyButton = DupeGroupBox:AddButton({
    Text = "Dupe Dagger",
    Func = function()
        Library:Notify("Dupping One Dagger", 2.6)

        function DupeDaggers()
            local player = game.Players.LocalPlayer
            local player = game.Players.LocalPlayer
    
            local playerGui = player:FindFirstChild("PlayerGui")
            if playerGui then
                local menuScreen = playerGui:FindFirstChild("Menu Screen")
                if menuScreen and menuScreen:IsA("ScreenGui") then
                    menuScreen.Enabled = false
                    if menuScreen:FindFirstChild("RemoteEvent") then
                        menuScreen.RemoteEvent:FireServer("Holloween Dagger")
                    else
                        warn("RemoteEvent not found in Menu Screen.")
                    end
                else
                    warn("Menu Screen not found or is not a ScreenGui.")
                end
            else
                warn("PlayerGui not found.")
            end
    
            local function performActionAfterSpawn()
                wait()
                if player.Character then
                    player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(-287, 108, -48)
                    wait(0.3)
    
                    local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        humanoid.Health = 0
                        wait()
            local player = game.Players.LocalPlayer
    
            local Dagger = player.Backpack:FindFirstChild("Holloween Dagger")
    
            if Dagger then
                local humanoid = player.Character:FindFirstChild("Humanoid")
    
                if humanoid then
                    humanoid:EquipTool(Dagger)
                else
                    warn("Humanoid not found in player's character.")
                end
            else
                warn("Dagger tool not found in player's backpack.")
                    end
                        wait(0.1)
                        game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
                        wait(0.1)
                        game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.One, false, game)
                    end
                else
                    warn("Player or Humanoid not found.")
                end
            end
    
            if player.Character then
                performActionAfterSpawn()
            else
                player.CharacterAdded:Connect(performActionAfterSpawn)
            end
            game:GetService("RunService").Heartbeat:Wait()
            game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
        end
        DupeDaggers()

        wait(6)

        local root = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("HumanoidRootPart") or game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("BasePart")
        wait(0.1)
        local function touch(x)
            x = x:FindFirstAncestorWhichIsA("BasePart")
            if x and firetouchinterest then
                if x.Name == "Button" then
                    return
                end
                
                task.spawn(function()
                    firetouchinterest(x, root, 1)
                    wait()
                    firetouchinterest(x, root, 0)
                end)
                x.CFrame = root.CFrame
            end
        end
    
        for _, descendant in ipairs(workspace:GetDescendants()) do
            if descendant:IsA("TouchTransmitter") then
                touch(descendant)
            end
        end
        game:GetService('Players').LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").Frame.Visible = false
        game:GetService('Players').LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").ViewportFrame.Visible = false
    end,
    DoubleClick = false,
})

local MyButton = DupeGroupBox:AddButton({
    Text = "Dupe Steel",
    Func = function()
        Library:Notify("Dupping Two Steel's", 2.6)    
        function DupeSteel()
            local player = game.Players.LocalPlayer
            local player = game.Players.LocalPlayer
    
            local playerGui = player:FindFirstChild("PlayerGui")
            if playerGui then
                local menuScreen = playerGui:FindFirstChild("Menu Screen")
                if menuScreen and menuScreen:IsA("ScreenGui") then
                    menuScreen.Enabled = false
                    if menuScreen:FindFirstChild("RemoteEvent") then
                        menuScreen.RemoteEvent:FireServer("Steel Sword")
                    else
                        warn("RemoteEvent not found in Menu Screen.")
                    end
                else
                    warn("Menu Screen not found or is not a ScreenGui.")
                end
            else
                warn("PlayerGui not found.")
            end
    
            local function performActionAfterSpawn()
                wait()
                if player.Character then
                    player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(-287, 108, -48)
                    wait(0.3)
    
                    local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        humanoid.Health = 0
                        wait()
            local player = game.Players.LocalPlayer
    
            local SteelSword = player.Backpack:FindFirstChild("Steel Sword")
    
            if SteelSword then
                local humanoid = player.Character:FindFirstChild("Humanoid")
    
                if humanoid then
                    humanoid:EquipTool(grenade2)
                else
                    warn("Humanoid not found in player's character.")
                end
            else
                warn("Steel Sword tool not found in player's backpack.")
                    end
                        wait(0.1)
                        game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
                        wait(0.1)
                        game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.One, false, game)
                    end
                else
                    warn("Player or Humanoid not found.")
                end
            end
    
            if player.Character then
                performActionAfterSpawn()
            else
                player.CharacterAdded:Connect(performActionAfterSpawn)
            end
            game:GetService("RunService").Heartbeat:Wait()
            game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
        end
    
        DupeSteel()
    
        wait(6)
    
        DupeSteel()
    
        wait(6)
    
        local root = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("HumanoidRootPart") or game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("BasePart")
        wait(0.1)
        local function touch(x)
            x = x:FindFirstAncestorWhichIsA("BasePart")
            if x and firetouchinterest then
                if x.Name == "Button" then
                    return
                end
                
                task.spawn(function()
                    firetouchinterest(x, root, 1)
                    wait()
                    firetouchinterest(x, root, 0)
                end)
                x.CFrame = root.CFrame
            end
        end
    
        for _, descendant in ipairs(workspace:GetDescendants()) do
            if descendant:IsA("TouchTransmitter") then
                touch(descendant)
            end
        end
        game:GetService('Players').LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").ViewportFrame.Visible = false
        game:GetService('Players').LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").Frame.Visible = false    end,
    DoubleClick = false,
})

local LoopGroupBox = Tabs.Main:AddLeftGroupbox('Loop')

local usernamee = ""

LoopGroupBox:AddDropdown('MyPlayerDropdown', {
    SpecialType = 'Player',
    Text = 'Revolver Loop Target',

    Callback = function(x)
        usernamee = x
    end
})

LoopGroupBox:AddToggle('MyToggle', {
    Text = 'Start / Stop Loop',
    Default = false,

    Callback = function(v)
        getgenv().RevLoop = v
        while true do
            if not getgenv().RevLoop then return end
            local Players = game:GetService("Players")
            local StarterGui = game:GetService("StarterGui")
            local LocalPlayer = Players.LocalPlayer
            local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local isCooldown = false
            
            local function g(username)
                for _, player in pairs(Players:GetPlayers()) do
                    if player.Name:lower() == username:lower() then
                        return player
                    end
                end
                return nil
            end
            
            local function startcooking()
                while getgenv().RevLoop do
                    wait(1)
                    local targetUsername = usernamee
                    local targetPlayer = g(targetUsername)
            
                    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
                        local Target = targetPlayer.Character.Humanoid
                        local tool = LocalPlayer.Backpack:FindFirstChild("Kawaii Revolver")
                        local damageRemote = tool and tool:FindFirstChild("DamageRemote")
                        local shield = targetPlayer.Character:FindFirstChild("Shield")
            
                        if shield then
                            wait()
                            Library:Notify("Player has shield")
                        end
            
                        if damageRemote then
                            while Target and Target.Health > 0 do
                                if not isCooldown then
                                    isCooldown = true
            
                                    tool.Parent = Character
                                    damageRemote:FireServer(Target)
                                    tool.Parent = LocalPlayer.Backpack
            
                                    wait(0.6)
                                    isCooldown = false
                                end
                                wait()
                            end
            
                            if Target and Target.Health <= 0 then
                                wait()
                                Library:Notify("You killed the player.")
                            end
                        else
                            Library:Notify("DamageRemote not found.")
                        end
                    else
                        Library:Notify("Player not found or he lefted.")
                    end
                end
            end
            
            local function fag()
                while getgenv().RevLoop do
                    wait(1)
                    local tool = LocalPlayer.Backpack:FindFirstChild("Kawaii Revolver")
                    if tool then
                        startcooking()
                        Library:Notify("Doing damage to targeted player.")
                    else
                        Library:Notify("Select a Weapon")
                    end
                end
            end
            
            LocalPlayer.CharacterAdded:Connect(function(newCharacter)
                Character = newCharacter
                wait(1)
                fag()
            end)
            
            fag()
        end
    end
})

local userrname2 = ""

LoopGroupBox:AddDropdown('MyPlayerDropdown', {
    SpecialType = 'Player',
    Text = 'Void Target',

    Callback = function(x)
        userrname2 = x
    end
})

local MyButton = LoopGroupBox:AddButton({
    Text = 'Void Targeted User',
    Func = function()
        local userrname3 = userrname2
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        
        local function g(username)
            for _, player in pairs(Players:GetPlayers()) do
                if player.Name:lower() == username:lower() then
                    return player
                end
            end
            return nil
        end
        
        local targetUsername = userrname3
        local targetPlayer = g(targetUsername)
        
        if targetPlayer and targetPlayer.Character then
            local targetModel = workspace:FindFirstChild(targetPlayer.Name)
            if targetModel then
                local targetHumanoid = targetModel:FindFirstChild("Humanoid")
                local targetRagdolled = targetModel:FindFirstChild("Ragdolled")
        
                if targetRagdolled then
                    local tool = LocalPlayer.Backpack:FindFirstChild("Kawaii Revolver")
                    local damageRemote = tool and tool:FindFirstChild("DamageRemote")
        
                    if damageRemote then
                        while targetRagdolled.Value == false do
                            damageRemote:FireServer(targetHumanoid)
                            wait(0.8)
                        end
                    else
                        warn("No se encontró el 'DamageRemote' en el arma.")
                    end
        
                    if targetRagdolled.Value == true then
                        local function teletransportarseAObjetivo(jugador, objetivoNombre)
                            local objetivo = workspace:FindFirstChild(objetivoNombre)
        
                            if objetivo then
                                local ragdollValue = objetivo:FindFirstChild("Ragdolled")
                                if ragdollValue and ragdollValue.Value == true then
                                    if jugador.Character and jugador.Character:FindFirstChild("HumanoidRootPart") and objetivo:FindFirstChild("HumanoidRootPart") then
                                        jugador.Character.HumanoidRootPart.CFrame = objetivo.HumanoidRootPart.CFrame
        
                                        local tiempoDeLoop = 1.5
                                        local inicio = tick()
                                        local radio = 0.2
        
                                        while tick() - inicio < tiempoDeLoop do
                                            local angulo = (tick() - inicio) * math.pi
        
                                            local nuevaPosicion = objetivo.HumanoidRootPart.Position + Vector3.new(
                                                math.cos(angulo) * radio,
                                                0,                          
                                                math.sin(angulo) * radio 
                                            )
        
                                            jugador.Character.HumanoidRootPart.CFrame = CFrame.new(nuevaPosicion)
                                            wait()
                                            Library:Notify("Press F To Carry Target!")
                                        end
        
                                    end
                                else

                                end
                            else

                            end
                        end
        
        
                        local jugador = game.Players.LocalPlayer 
                        local objetivoNombre = userrname3    
                        teletransportarseAObjetivo(jugador, objetivoNombre)
        
                        local character = game.Players.LocalPlayer.Character
                        local rootPart = character and character:FindFirstChild("HumanoidRootPart")
                        if rootPart then
                            rootPart.CFrame = CFrame.new(10394, -113, -10404)
                            wait(0.1)
                            rootPart.CFrame = CFrame.new(10396.37, -426.99, -10406.17)
                            
                            local humanoid = character:FindFirstChild("Humanoid")
                            if humanoid then
                                humanoid.Sit = true
                                task.wait(0.1)
                                if rootPart then
                                    rootPart.CFrame = rootPart.CFrame * CFrame.Angles(math.pi * 0.5, 0, 0)
                                end
        
                                for _, animation in ipairs(humanoid:GetPlayingAnimationTracks()) do
                                    animation:Stop()
                                end
                            end
        
                            local player = game.Players.LocalPlayer
                            local humanoid = game.Workspace[player.Name]:FindFirstChild("Humanoid")
                            if humanoid then
                                humanoid.Health = 0
                            end
                        else

                        end
                    end
                else

                end
            else

            end
        else
            Library:Notify("User not founded.")
        end
    end,
    DoubleClick = false,
})

local MyButton = LoopGroupBox:AddButton({
    Text = 'Goto SafeZone',
    Func = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(100000, 100001, 100000)
    end,
    DoubleClick = false,
})

local AutoSelectGroupBox = Tabs.Main:AddRightGroupbox('Auto Select')

local Pressing = false

AutoSelectGroupBox:AddToggle('MyToggle', {
    Text = 'Enable',
    Default = false,

    Callback = function()
        local stopFlag = false
        local function pressKey()
            wait(.5)  
            game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.KeypadSeven, false, game)
        end
    
        if Pressing then
            Pressing = false
            stopFlag = true
        else
            Pressing = true
            stopFlag = false
            spawn(function()
                repeat
                    pressKey()
                    wait(1)
                    game:GetService("RunService").Heartbeat:Wait()
                until stopFlag or not Pressing
            end)
        end
    end
})

AutoSelectGroupBox:AddDropdown('MyDropdown', {
    Values = { "Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe", "Emerald Greatsword","Blood Dagger","Frost Spear","Pink Hammer","Steel Sword","Katana","Holloween Dagger" },
    Default = 8,
    Multi = false,

    Text = 'Select a weapon',

    Callback = function(weapon)
        local Mouse = game.Players.LocalPlayer:GetMouse()
        game:GetService("UserInputService").InputBegan:Connect(function(Input, IsTyping)
        if IsTyping then return end
        if Input.KeyCode == Enum.KeyCode.KeypadSeven then
            local Player = game:GetService("Players").LocalPlayer
            local Mouse = Player:GetMouse()
            game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").Enabled = false
            Player.PlayerGui["Menu Screen"].RemoteEvent:FireServer(weapon)
            wait(1) end
        end)
    end
})

local MiscGroupBox = Tabs.Main:AddRightGroupbox('Features')

local HlColor = Color3.fromRGB(255,255,255)

local MyButton = MiscGroupBox:AddButton({
    Text = 'Hitlock',
    Func = function()
        plr:GetMouse().KeyDown:Connect(function(key)
            if key == 'r' then
                tar = nil
                for _,v in next,workspace:GetDescendants() do
                    if v.Name == 'SelectedPlayer' then
                        v:Destroy()
                    end
                end
                local n_plr, dist
                for _, v in pairs(game.Players:GetPlayers()) do
                    if v ~= plr and plr.Character and plr.Character:FindFirstChild'HumanoidRootPart' then
                        local distance = v:DistanceFromCharacter(plr.Character.HumanoidRootPart.Position)
                        if v.Character and (not dist or distance <= dist) and v.Character:FindFirstChildOfClass'Humanoid' and v.Character:FindFirstChildOfClass'Humanoid'.Health>0 and v.Character:FindFirstChild'HumanoidRootPart' then
                            dist = distance
                            n_plr = v
                        end
                    end
                end
                local sp = Instance.new('SelectionBox',n_plr.Character.Torso)
                sp.Name = 'SelectedPlayer'
                sp.Adornee = n_plr.Character.HumanoidRootPart
                sp.Color3 = HlColor
                sp.Transparency = 0
                tar = n_plr
            elseif key == 'q' and tar and plr.Character then
                for _,v in next, plr22.Character:GetDescendants() do
                    if v:IsA'Tool' and v.Name ~= 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'DamageRemote' and v:FindFirstChild'Cooldown' and tar and tar.Character and tar.Character:FindFirstChildOfClass'Humanoid' then
                        AddCd(v, v.Cooldown.Value)
        
                        if v:FindFirstChild'Attack' and plr22.Character:FindFirstChildOfClass'Humanoid' then
                            plr22.Character:FindFirstChildOfClass'Humanoid':LoadAnimation(v.Attack):Play()
                        end
        
                        if v:FindFirstChild('Blade') then
                            local swingSound = v.Blade:FindFirstChild('SwingSound')
                            local hitSound = v.Blade:FindFirstChild('HitSound')
    
                            if swingSound and swingSound:IsA('Sound') then
                                swingSound:Play()
                            end
        
                            local humanoidTarget = tar.Character:FindFirstChildOfClass('Humanoid')
                            if humanoidTarget then
                                wait(0.2)
        
                                v.DamageRemote:FireServer(humanoidTarget)
        
                                if hitSound and hitSound:IsA('Sound') and isWithinDistance(plr22, tar, 20) then
                                    hitSound:Play()
                                end
                            end
                        end
                    elseif v:IsA'Tool' and v.Name == 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'ReplicateRemote' and v:FindFirstChild'Barrel' and v.Barrel:FindFirstChild'Attachment' and tar and tar.Character and tar.Character:FindFirstChild'Head' then
                        v.Parent = plr22.Character
                        AddCd(v,0.8)
                        rs.Stepped:Wait()
                        plr22.Character:FindFirstChildOfClass'Humanoid':LoadAnimation(v.Fire):Play()
        
                        Shoot(v.Barrel.Attachment.WorldPosition, tar.Character:WaitForChild("Torso").Position, v)
                        v.ReplicateRemote:FireServer(tar.Character:WaitForChild("Torso").Position)
        
                        local hitSound = v:FindFirstChild('HitSound')
                        if hitSound and hitSound:IsA('Sound') and isWithinDistance(plr22, tar, 20) then
                            hitSound:Play()
                        end
                    end
                end
            end
        end)
    end,
    DoubleClick = false,
})

local MyButton = MiscGroupBox:AddButton({
    Text = 'Anti Fling',
    Func = function()
        local Services = setmetatable({}, {__index = function(Self, Index)
            local NewService = game.GetService(game, Index)
            if NewService then
            Self[Index] = NewService
            end
            return NewService
            end})
            
            local LocalPlayer = Services.Players.LocalPlayer
            
            local function PlayerAdded(Player)
               local Detected = false
               local Character;
               local PrimaryPart;
            
               local function CharacterAdded(NewCharacter)
                   Character = NewCharacter
                   repeat
                       wait()
                       PrimaryPart = NewCharacter:FindFirstChild("HumanoidRootPart")
                   until PrimaryPart
                   Detected = false
               end
            
               CharacterAdded(Player.Character or Player.CharacterAdded:Wait())
               Player.CharacterAdded:Connect(CharacterAdded)
               Services.RunService.Heartbeat:Connect(function()
                   if (Character and Character:IsDescendantOf(workspace)) and (PrimaryPart and PrimaryPart:IsDescendantOf(Character)) then
                       if PrimaryPart.AssemblyAngularVelocity.Magnitude > 50 or PrimaryPart.AssemblyLinearVelocity.Magnitude > 100 then
                           Detected = true
                           for i,v in ipairs(Character:GetDescendants()) do
                               if v:IsA("BasePart") then
                                   v.CanCollide = false
                                   v.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                                   v.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                                   v.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0)
                               end
                           end
                           PrimaryPart.CanCollide = false
                           PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                           PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                           PrimaryPart.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0)
                       end
                   end
               end)
            end
            
            for i,v in ipairs(Services.Players:GetPlayers()) do
               if v ~= LocalPlayer then
                   PlayerAdded(v)
               end
            end
            Services.Players.PlayerAdded:Connect(PlayerAdded)
            
            local LastPosition = nil
            Services.RunService.Heartbeat:Connect(function()
               pcall(function()
                   local PrimaryPart = LocalPlayer.Character.PrimaryPart
                   if PrimaryPart.AssemblyLinearVelocity.Magnitude > 250 or PrimaryPart.AssemblyAngularVelocity.Magnitude > 250 then
                       PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                       PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                       PrimaryPart.CFrame = LastPosition
                   elseif PrimaryPart.AssemblyLinearVelocity.Magnitude < 50 or PrimaryPart.AssemblyAngularVelocity.Magnitude > 50 then
                   LastPosition = PrimaryPart.CFrame
                end
            end)
        end)
    end,
    DoubleClick = false,
})

local MyButton = MiscGroupBox:AddButton({
    Text = 'Anti Void',
    Func = function()
        local Players = game:GetService("Players")
        local Workspace = game:GetService("Workspace")

        local loser1 = Players.LocalPlayer

        local function loser2(character)
            local loser3 = character:WaitForChild("Being Carried", 5)
            if loser3 and loser3:IsA("BoolValue") then
                loser3:GetPropertyChangedSignal("Value"):Connect(function()
                    if loser3.Value == true then
                        local loser4 = loser1:WaitForChild("Backpack")
                        for _, tool in pairs(loser4:GetChildren()) do
                            if tool:IsA("Tool") and tool:FindFirstChild("DamageRemote") and tool.Name ~= "Kawaii Revolver" then
                                character:WaitForChild("Humanoid"):EquipTool(tool)
                                break
                            end
                        end

                        local loser5 = character:FindFirstChildOfClass("Tool")
                        local loser6 = character:FindFirstChild("Humanoid")
                        if loser5 and loser5:FindFirstChild("DamageRemote") and loser6 then
                            repeat
                                loser5.DamageRemote:FireServer(loser6)
                                wait(0.1)
                            until loser6.Health <= 0 or loser3.Value == false
                        end
                    end
                end)
            end
        end

        loser1.CharacterAdded:Connect(function(character)
            loser2(character)
        end)

        if loser1.Character then
            loser2(loser1.Character)
        end
    end,
    DoubleClick = false,
})

local MyButton = MiscGroupBox:AddButton({
    Text = 'Infinite Yield',
    Func = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end,
    DoubleClick = false,
})

local SpyChatColor = Color3.fromRGB(180, 76, 232)

MiscGroupBox:AddToggle('MyToggle', {
    Text = 'Spychat',
    Default = false,

    Callback = function(a)
        if a then
            enabled = true
            spyOnMyself = false
            public = false
            publicItalics = true
            privateProperties = {
                Color = SpyChatColor;
                Font = Enum.Font.SourceSansBold;
                TextSize = 18;
            }
            local StarterGui = game:GetService("StarterGui")
            local Players = game:GetService("Players")
            local player = Players.LocalPlayer
            local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
            local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
            local instance = (_G.chatSpyInstance or 0) + 1
            _G.chatSpyInstance = instance
             
            local function onChatted(p,msg)
                if _G.chatSpyInstance == instance then
                    if p==player and msg:lower():sub(1,4)=="/spy" then
                        enabled = not enabled
                        wait(0.3)
                        privateProperties.Text = "{Spy "..(enabled and "En" or "Dis").."abled}"
                        StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
                    elseif enabled and (spyOnMyself==true or p~=player) then
                        msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
                        local hidden = true
                        local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
                            if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and public==false and Players[packet.FromSpeaker].Team==player.Team)) then
                                hidden = false
                            end
                        end)
                        wait(1)
                        conn:Disconnect()
                        if hidden and enabled then
                            if public then
                                saymsg:FireServer((publicItalics and "/me " or '').."{Spy } [".. p.Name .."]: "..msg,"All")
                            else
                                privateProperties.Text = "{Spy } [".. p.Name .."]: "..msg
                                StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
                            end
                        end
                    end
                end
            end
             
            for _,p in ipairs(Players:GetPlayers()) do
                p.Chatted:Connect(function(msg) onChatted(p,msg) end)
            end
            Players.PlayerAdded:Connect(function(p)
                p.Chatted:Connect(function(msg) onChatted(p,msg) end)
            end)
            privateProperties.Text = "{Spy "..(enabled and "En" or "Dis").."abled}"
            StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
            local chatFrame = player.PlayerGui.Chat.Frame
            chatFrame.ChatChannelParentFrame.Visible = true
            chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)
        else
            enabled = false
            spyOnMyself = false
            public = false
            publicItalics = true
            privateProperties = {
                Color = SpyChatColor;
                Font = Enum.Font.SourceSansBold;
                TextSize = 18;
            }
            local StarterGui = game:GetService("StarterGui")
            local Players = game:GetService("Players")
            local player = Players.LocalPlayer
            local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
            local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
            local instance = (_G.chatSpyInstance or 0) + 1
            _G.chatSpyInstance = instance
             
            local function onChatted(p,msg)
                if _G.chatSpyInstance == instance then
                    if p==player and msg:lower():sub(1,4)=="/spy" then
                        enabled = not enabled
                        wait(0.3)
                        privateProperties.Text = "{Spy "..(enabled and "En" or "Dis").."abled}"
                        StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
                    elseif enabled and (spyOnMyself==true or p~=player) then
                        msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
                        local hidden = true
                        local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
                            if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and public==false and Players[packet.FromSpeaker].Team==player.Team)) then
                                hidden = false
                            end
                        end)
                        wait(1)
                        conn:Disconnect()
                        if hidden and enabled then
                            if public then
                                saymsg:FireServer((publicItalics and "/me " or '').."{Spy } [".. p.Name .."]: "..msg,"All")
                            else
                                privateProperties.Text = "{Spy } [".. p.Name .."]: "..msg
                                StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
                            end
                        end
                    end
                end
            end
             
            for _,p in ipairs(Players:GetPlayers()) do
                p.Chatted:Connect(function(msg) onChatted(p,msg) end)
            end
            Players.PlayerAdded:Connect(function(p)
                p.Chatted:Connect(function(msg) onChatted(p,msg) end)
            end)
            privateProperties.Text = "{Spy "..(enabled and "En" or "Dis").."abled}"
            StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
            local chatFrame = player.PlayerGui.Chat.Frame
            chatFrame.ChatChannelParentFrame.Visible = true
            chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)
        end
    end
})

MiscGroupBox:AddToggle('MyToggle', {
    Text = 'Died Tp',
    Default = false,

    Callback = function(v)
        getgenv().DiedTp = v
        while true do
            if not getgenv().DiedTp then return end
            wait()
            if game.Players.LocalPlayer.Character.Humanoid.Health == 0 then
                local pos = game:GetService "Players".LocalPlayer.Character.HumanoidRootPart.CFrame
                wait(6)
                game:GetService "Players".LocalPlayer.Character.HumanoidRootPart.CFrame = pos
            end
        end
    end
})

MiscGroupBox:AddToggle('MyToggle', {
    Text = 'Anti Spikes',
    Default = false,

    Callback = function(v)
        getgenv().AntiSpikes = v
        while true do
            if not getgenv().AntiSpikes then return end
            local function removeTouchInterestFromSpikeTrap()
                for _, object in pairs(game.Workspace:GetDescendants()) do
                    if object.Name == "Spike Trap" then
                        local button = object:FindFirstChild("Button")
                        if button then
                            for _, child in pairs(button:GetChildren()) do
                                if child:IsA("TouchTransmitter") then
                                    child:Destroy()
                                end
                            end
                        end
                    end
                end
            end
            
            local player = game.Players.LocalPlayer
            
            player.CharacterAdded:Connect(function(character)
                character:WaitForChild("HumanoidRootPart")
                removeTouchInterestFromSpikeTrap()
            end)
            
            if player.Character then
                removeTouchInterestFromSpikeTrap()
            end
            wait(1) 
        end
    end
})

MiscGroupBox:AddLabel('Spychat Color'):AddColorPicker('ColorPicker', {
    Default = SpyChatColor, 
    Title = 'Spychat Color',
    Transparency = nil,

    Callback = function(Value)
        SpyChatColor = Value
    end
})

MiscGroupBox:AddLabel('Hitlock Color'):AddColorPicker('ColorPicker', {
    Default = HlColor, 
    Title = 'Spychat Color',
    Transparency = nil,

    Callback = function(Value)
        HlColor = Value
    end
})

MiscGroupBox:AddLabel('Void'):AddKeyPicker('KeyPicker', {
    Default = 'None',
    SyncToggleState = false,
    Mode = 'Toggle',
    Text = 'Void',
    NoUI = false,

    Callback = function()
        local character = game.Players.LocalPlayer.Character
        local rootPart = character and character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            rootPart.CFrame = CFrame.new(10394, -113, -10404)
            wait(0.1)
            rootPart.CFrame = CFrame.new(10396.37, -426.99, -10406.17)
            
            if humanoid then
                humanoid.Sit = true
                task.wait(0.1)
                if rootPart then
                    rootPart.CFrame = rootPart.CFrame * CFrame.Angles(math.pi * 0.5, 0, 0)
                end

                for _, animation in ipairs(humanoid:GetPlayingAnimationTracks()) do
                    animation:Stop()
                end
            end

            local player = game.Players.LocalPlayer
            local humanoid = game.Workspace[player.Name]:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.Health = 0
            end
        else
            warn("HumanoidRootPart no encontrado.")
        end
    end,

    ChangedCallback = function(New)

    end
})

MiscGroupBox:AddLabel('Fake Triple Jump'):AddKeyPicker('KeyPicker', {
    Default = 'None',
    SyncToggleState = false,
    Mode = 'Toggle',
    Text = 'Fake Triple Jump',
    NoUI = false,

    Callback = function()
        local Players = game:GetService("Players")
        local UserInputService = game:GetService("UserInputService")
        local LocalPlayer = Players.LocalPlayer
        
        local plrs = game:GetService'Players'
        local plr = plrs.LocalPlayer
        local mouse = plr:GetMouse()
        
        local hasDoubleJumped = false
        
        local function performDoubleJump()
            local character = LocalPlayer.Character
            local humanoid = character and character:FindFirstChildOfClass('Humanoid')
                    if humanoid and not hasDoubleJumped then
                        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                        wait()

                        for _,v in next,plr.Backpack:GetChildren() do
                            if v.Name == 'C4' and v:FindFirstChild'RemoteEvent' then
                                v.Parent = plr.Character
                                wait()
                                humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                                wait(0.1)
                                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                                v.RemoteEvent:FireServer(mouse.Hit.LookVector)
                                v.Parent = plr.Backpack
                            end
                        end

                        wait(0.1)
                        for _,v in next,plr.Backpack:GetChildren() do
                            if v.Name == 'Grenade' and v:FindFirstChild'RemoteEvent' then
                                v.Parent = plr.Character
                                wait()
                                humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                                wait(0.1)
                                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                                v:Activate()
                                v.Parent = plr.Backpack
                            end
                        end
                        hasDoubleJumped = true
                    end
                end
        performDoubleJump()
    end,

    ChangedCallback = function(New)

    end
})

MiscGroupBox:AddLabel('Fast Reset'):AddKeyPicker('KeyPicker', {
    Default = 'None',
    SyncToggleState = false,
    Mode = 'Toggle',
    Text = 'Fast Reset',
    NoUI = false,

    Callback = function()
        local player = game.Players.LocalPlayer
        local humanoid = game.Workspace[player.Name].Humanoid
        humanoid.Health = 0
    end,

    ChangedCallback = function(New)

    end
})

local dashSpeed = 4000
local dashDuration = 0.2

MiscGroupBox:AddLabel('Fake G2 Dash'):AddKeyPicker('KeyPicker', {
    Default = 'None',
    SyncToggleState = false,
    Mode = 'Toggle',
    Text = 'Fake G2 Dash',
    NoUI = false,

    Callback = function()
        local player = game.Players.LocalPlayer
        local userInputService = game:GetService("UserInputService")
        
        local function initializeDash(character)
            local humanoid = character:WaitForChild("Humanoid")
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        
            local function dash()
                local moveDirection = humanoid.MoveDirection
                if moveDirection.Magnitude > 0 then
                    moveDirection = moveDirection.Unit
        
                    local bodyVelocity = Instance.new("BodyVelocity")
                    bodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
                    bodyVelocity.Velocity = moveDirection * dashSpeed
                    bodyVelocity.Parent = humanoidRootPart
                    
                    wait(dashDuration)
                    bodyVelocity:Destroy()
                end
            end
            game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
            dash()
        end
        
        player.CharacterAdded:Connect(function(character)
            initializeDash(character)
        end)
        
        if player.Character then
            initializeDash(player.Character)
        end
    end,

    ChangedCallback = function(New)

    end
})

MiscGroupBox:AddSlider('MySlider', {
    Text = 'Dash Speed',
    Default = dashSpeed,
    Min = 0,
    Max = 10000,
    Rounding = 1,
    Compact = false,

    Callback = function(x)
        dashSpeed = x
    end
})

MiscGroupBox:AddSlider('MySlider', {
    Text = 'Dash Duration',
    Default = dashDuration,
    Min = 0,
    Max = 1,
    Rounding = 3,
    Compact = false,

    Callback = function(x)
        dashDuration = x
    end
})

local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')
MenuGroup:AddLabel('Keybind'):AddKeyPicker('MenuKeybind', { Default = 'F1', NoUI = true, Text = 'Menu keybind' })
local MyButton = MenuGroup:AddButton({
    Text = 'Rejoin',
    Func = function()
        local ts = game:GetService("TeleportService")
        local p = game:GetService("Players").LocalPlayer     
        ts:Teleport(game.PlaceId, p)
    end,
    DoubleClick = false,
})


Library.ToggleKeybind = Options.MenuKeybind
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })
ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')
SaveManager:BuildConfigSection(Tabs['UI Settings'])
ThemeManager:ApplyToTab(Tabs['UI Settings'])
SaveManager:LoadAutoloadConfig()
Library:Notify("Script cargado correctamente")
